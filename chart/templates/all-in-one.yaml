---
# Source: eck/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-operator
  namespace: {{ .Release.Namespace }}
---
# Source: eck/templates/webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "elastic-webhook-server-cert"
  namespace: {{ .Release.Namespace }}
---
# Source: eck/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-operator
rules:
- resources:
  - subjectaccessreviews
  apiGroups:
  - "authorization.k8s.io"
  verbs:
  - create
- resources:
  - pods
  - endpoints
  - events
  - persistentvolumeclaims
  - secrets
  - services
  - configmaps
  - serviceaccounts
  apiGroups:
  - ""
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - deployments
  - statefulsets
  - daemonsets
  apiGroups:
  - apps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - poddisruptionbudgets
  apiGroups:
  - policy
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - elasticsearches
  - elasticsearches/status
  - elasticsearches/finalizers
  - enterpriselicenses
  - enterpriselicenses/status
  apiGroups:
  - elasticsearch.k8s.elastic.co
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - kibanas
  - kibanas/status
  - kibanas/finalizers
  apiGroups:
  - kibana.k8s.elastic.co
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - apmservers
  - apmservers/status
  - apmservers/finalizers
  apiGroups:
  - apm.k8s.elastic.co
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - enterprisesearches
  - enterprisesearches/status
  - enterprisesearches/finalizers
  apiGroups:
  - enterprisesearch.k8s.elastic.co
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  apiGroups:
  - admissionregistration.k8s.io
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- resources:
  - beats
  - beats/status
  - beats/finalizers
  apiGroups:
  - beat.k8s.elastic.co
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: eck/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "elastic-operator-view"
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- resources: ["elasticsearches"]
  apiGroups: ["elasticsearch.k8s.elastic.co"]
  verbs: ["get", "list", "watch"]
- resources: ["apmservers"]
  apiGroups: ["apm.k8s.elastic.co"]
  verbs: ["get", "list", "watch"]
- resources: ["kibanas"]
  apiGroups: ["kibana.k8s.elastic.co"]
  verbs: ["get", "list", "watch"]
- resources: ["enterprisesearches"]
  apiGroups: ["enterprisesearch.k8s.elastic.co"]
  verbs: ["get", "list", "watch"]
- resources: ["beats"]
  apiGroups: ["beat.k8s.elastic.co"]
  verbs: ["get", "list", "watch"]
---
# Source: eck/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "elastic-operator-edit"
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- resources: ["elasticsearches"]
  apiGroups: ["elasticsearch.k8s.elastic.co"]
  verbs: ["create", "delete", "deletecollection", "patch", "update"]
- resources: ["apmservers"]
  apiGroups: ["apm.k8s.elastic.co"]
  verbs: ["create", "delete", "deletecollection", "patch", "update"]
- resources: ["kibanas"]
  apiGroups: ["kibana.k8s.elastic.co"]
  verbs: ["create", "delete", "deletecollection", "patch", "update"]
- resources: ["enterprisesearches"]
  apiGroups: ["enterprisesearch.k8s.elastic.co"]
  verbs: ["create", "delete", "deletecollection", "patch", "update"]
- resources: ["beats"]
  apiGroups: ["beat.k8s.elastic.co"]
  verbs: ["create", "delete", "deletecollection", "patch", "update"]
---
# Source: eck/templates/managed-ns-role-bindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-operator
roleRef:
  name: elastic-operator
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: elastic-operator
  namespace: {{ .Release.Namespace }}
  kind: ServiceAccount
---
# Source: eck/templates/operator-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: elastic-operator
  namespace: {{ .Release.Namespace }}
roleRef:
  name: elastic-operator
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: elastic-operator
  namespace: {{ .Release.Namespace }}
  kind: ServiceAccount
---
# Source: eck/templates/webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: elastic-webhook-server
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    control-plane: elastic-operator
  ports:
  - name: https
    port: 443
    targetPort: 9443
---
# Source: eck/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elastic-operator
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: elastic-operator
spec:
  selector:
    matchLabels:
      control-plane: elastic-operator
  template:
    metadata:
      labels:
        control-plane: elastic-operator
      annotations:
        # Rename the fields "error" to "error.message" and "source" to "event.source"
        # This is to avoid a conflict with the ECS "error" and "source" documents.
        "co.elastic.logs/raw": "[{\"type\":\"container\",\"json.keys_under_root\":true,\"paths\":[\"/var/log/containers/*${data.kubernetes.container.id}.log\"],\"processors\":[{\"convert\":{\"mode\":\"rename\",\"ignore_missing\":true,\"fields\":[{\"from\":\"error\",\"to\":\"_error\"}]}},{\"convert\":{\"mode\":\"rename\",\"ignore_missing\":true,\"fields\":[{\"from\":\"_error\",\"to\":\"error.message\"}]}},{\"convert\":{\"mode\":\"rename\",\"ignore_missing\":true,\"fields\":[{\"from\":\"source\",\"to\":\"_source\"}]}},{\"convert\":{\"mode\":\"rename\",\"ignore_missing\":true,\"fields\":[{\"from\":\"_source\",\"to\":\"event.source\"}]}}]}]"
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: elastic-operator
      containers:
      - name: manager
        image: "docker.elastic.co/eck/eck-operator:1.2.1"
        args:
        - "manager"
        - "--log-verbosity=0"
        - "--metrics-port=0"
        - "--container-registry=docker.elastic.co"
        - "--max-concurrent-reconciles=3"
        - "--ca-cert-validity=8760h"
        - "--ca-cert-rotate-before=24h"
        - "--cert-validity=8760h"
        - "--cert-rotate-before=24h"
        - "--enable-webhook"
        ports:
        - name: https-webhook
          protocol: TCP
          containerPort: 9443
        env:
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPERATOR_IMAGE
          value: "docker.elastic.co/eck/eck-operator:1.2.1"
        - name: WEBHOOK_SECRET
          value: "elastic-webhook-server-cert"
        resources:
          limits:
            cpu: 1
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 150Mi
        volumeMounts:
        - name: cert
          readOnly: true
          mountPath: /tmp/k8s-webhook-server/serving-certs
        imagePullPolicy: IfNotPresent
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: "elastic-webhook-server-cert"
  serviceName: elastic-operator
---
# Source: eck/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: elastic-webhook.k8s.elastic.co
webhooks:
- name: elastic-apm-validation-v1.k8s.elastic.co
  clientConfig:
    service:
      name: elastic-webhook-server
      namespace: {{ .Release.Namespace }}
      path: /validate-apm-k8s-elastic-co-v1-apmserver
    caBundle: Cg==
  failurePolicy: Ignore
  rules:
  - resources:
    - apmservers
    apiGroups:
    - apm.k8s.elastic.co
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
- name: elastic-apm-validation-v1beta1.k8s.elastic.co
  clientConfig:
    service:
      name: elastic-webhook-server
      namespace: {{ .Release.Namespace }}
      path: /validate-apm-k8s-elastic-co-v1beta1-apmserver
    caBundle: Cg==
  failurePolicy: Ignore
  rules:
  - resources:
    - apmservers
    apiGroups:
    - apm.k8s.elastic.co
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
- name: elastic-beat-validation-v1beta1.k8s.elastic.co
  clientConfig:
    service:
      name: elastic-webhook-server
      namespace: {{ .Release.Namespace }}
      path: /validate-beat-k8s-elastic-co-v1beta1-beat
    caBundle: Cg==
  failurePolicy: Ignore
  rules:
  - resources:
    - beats
    apiGroups:
    - beat.k8s.elastic.co
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
- name: elastic-es-validation-v1.k8s.elastic.co
  clientConfig:
    service:
      name: elastic-webhook-server
      namespace: {{ .Release.Namespace }}
      path: /validate-elasticsearch-k8s-elastic-co-v1-elasticsearch
    caBundle: Cg==
  failurePolicy: Ignore
  rules:
  - resources:
    - elasticsearches
    apiGroups:
    - elasticsearch.k8s.elastic.co
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
- name: elastic-es-validation-v1beta1.k8s.elastic.co
  clientConfig:
    service:
      name: elastic-webhook-server
      namespace: {{ .Release.Namespace }}
      path: /validate-elasticsearch-k8s-elastic-co-v1beta1-elasticsearch
    caBundle: Cg==
  failurePolicy: Ignore
  rules:
  - resources:
    - elasticsearches
    apiGroups:
    - elasticsearch.k8s.elastic.co
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
- name: elastic-kb-validation-v1.k8s.elastic.co
  clientConfig:
    service:
      name: elastic-webhook-server
      namespace: {{ .Release.Namespace }}
      path: /validate-kibana-k8s-elastic-co-v1-kibana
    caBundle: Cg==
  failurePolicy: Ignore
  rules:
  - resources:
    - kibanas
    apiGroups:
    - kibana.k8s.elastic.co
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
- name: elastic-kb-validation-v1beta1.k8s.elastic.co
  clientConfig:
    service:
      name: elastic-webhook-server
      namespace: {{ .Release.Namespace }}
      path: /validate-kibana-k8s-elastic-co-v1beta1-kibana
    caBundle: Cg==
  failurePolicy: Ignore
  rules:
  - resources:
    - kibanas
    apiGroups:
    - kibana.k8s.elastic.co
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
